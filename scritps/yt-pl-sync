#!/usr/bin/env bash

trap - INT

function help() {
    echo "Usage: yt-pl-sync [OPTION/NOTHING]"
    echo "Download youtube playlist as mp3"
    echo ""
    echo "  no args         run the tool in the current directory"
    echo "  -h, --help      display this help and exit"
    echo "  -u, --update    update the docker image"
    echo "  -f, --find      search for config files and runs in the directories"
    echo ""
    echo "Source: https://github.com/dontWatchMeCode/yt-playlist-sync-mp3"
}

function update() {
    docker pull ghcr.io/dontwatchmecode/yt-playlist-sync-mp3:latest
}

function run() {
    docker run \
        --user "$(id -u)":"$(id -g)" \
        --init -it --rm \
        -v .:/mnt/vdata \
        ghcr.io/dontwatchmecode/yt-playlist-sync-mp3:latest \
        sh -c 'trap "exit 0" SIGINT && yt-dl-pl-sync'
}

function findRun() {
    echo "Searching for config files..."

    rootPath=$(realpath .)

    paths=$(find . -type f -name ".yt-playlist-sync-mp3.config" | grep -v "./.local/share/Trash")
    for path in $paths; do
        cd "$rootPath" || exit 1

        echo "Found config file:"
        echo "> $path"
        echo "Running yt-pl-sync in the directory..."

        directory=$(dirname "$path")
        directory=$(realpath "$directory")

        cd "$directory" || exit 1
        run || exit 0
    done
}

if [ $# -eq 0 ]; then
    run
elif [ $# -eq 1 ]; then
    arg=$1

    if [ "$arg" == '-u' ] || [ "$arg" == '--update' ]; then
        update
    elif [ "$arg" == '-f' ] || [ "$arg" == '--find' ]; then
        trap "exit" INT
        findRun
    else
        help
    fi
else
    help
fi
